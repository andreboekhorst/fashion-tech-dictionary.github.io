{"version":3,"sources":["assets/search.svg","assets/x.svg","assets/404.gif","logo.svg","assets/cross.svg","components/crumbComponent.js","components/singleComponent.js","components/headerComponent.js","components/menuComponent.js","components/listComponent.js","components/listPage.js","components/ScrollToTop.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CrumbComponent","props","activeTerm","console","log","className","to","Type","Term","SingleComponent","slug","terms","id","useParams","termObj","find","term","url","arr","x","newArr","i","Math","floor","random","length","push","getRandom","map","item","key","Definition","HeaderComponent","useState","searchQuery","setSearchQuery","searchResults","setSearchResults","searchActive","setSearchActive","history","useHistory","searchInput","useRef","termArr","fuse","Fuse","shouldSort","threshold","location","distance","minMatchCharLength","keys","document","addEventListener","e","current","focus","onSearchClick","blur","setSearch","val","preventDefault","href","onClick","src","img_search","img_cross","onSubmit","type","value","onChange","target","search","filter","onFocus","onBlur","ref","maxLength","result","MenuComponent","query","URLSearchParams","useLocation","callBack","allFilters","filters","filtery","get","split","activeFilters","setActiveFilters","isActiveFilter","includes","splice","filterPos","indexOf","pathname","join","toggleFilter","ListComponent","newCategory","isNewCategory","charAt","elements","filterBy","ListPage","allTerms","queryFilters","_filteredTerms","filteredTerms","setFilteredTerms","onlyUnique","index","array","updatedFilters","ScrollToTop","children","useEffect","window","scrollTo","App","sort","a","b","path","exact","img_404","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"i6vFAAAA,EAAOC,QAAU,IAA0B,oC,wBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,iC,yECA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,+LC4B5BC,EAnBS,SAACC,GAErB,IAAMC,EAAgBD,EAAMC,WAI5B,OAFAC,QAAQC,IAAI,cAAeF,GAGzB,yBAAKG,UAAU,WACb,yBAAKA,UAAU,eACb,0BAAMA,UAAU,aAAY,kBAAC,IAAD,CAAMC,GAAG,KAAT,OAA5B,IAAoD,mCAApD,IAAmE,kBAAC,IAAD,CAAMA,GAAI,YAAcJ,EAAWK,MAAUL,EAAWK,MAA3H,IAAyI,mCAAzI,IAA0JL,EAAWM,MACrK,0BAAMH,UAAU,aAAhB,aAEF,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMC,GAAG,UAAT,Y,OCAO,SAASG,EAAgBR,GAEtC,IAf8BS,EAexBC,EAAQV,EAAMU,MACdC,EAAOC,cAAPD,GAEAE,GAlBwBJ,EAkBOE,EAAPD,EAjBfI,MAAM,SAAAC,GAAI,OAAIA,EAAKC,KAAOP,MAmBzC,OAEI,6BACI,kBAAC,EAAD,CAAgBR,WAAaY,IAE7B,yBAAKT,UAAU,cACX,yBAAKA,UAAU,QACP,4BAAQA,UAAU,WAAU,kBAAC,IAAD,CAAMC,GAAG,KAAT,aAAqC,6BACjE,4BACI,wBAAID,UAAU,WAAd,sBAzB1B,SAAmBa,EAAKC,GAEtB,IADA,IAAIC,EAAS,GACJC,EAAI,EAAGA,EAAIF,EAAGE,IAAK,CACxB,IAAMF,EAAKD,EAAII,KAAKC,MAAMD,KAAKE,SAAWN,EAAIO,SAC9CL,EAAOM,KAAKP,GAEhB,OAAOC,EAoBmBO,CAAUhB,EAAO,GAAGiB,KAAK,SAAAC,GACvB,OAAQ,4BAAI,kBAAC,IAAD,CAAMvB,GAAKuB,EAAKZ,KAAQY,EAAKrB,YAOzD,yBAAKH,UAAU,QAEX,yBAAKA,UAAU,kBAAkByB,IAAMhB,EAAQG,KAC3C,yBAAKZ,UAAU,aACX,4BAAMS,EAAQN,OAElB,2BAAKM,EAAQP,KAAb,SAGA,0CAAiBO,EAAQiB,gB,4BCsFlCC,EA/HU,SAAC/B,GAAU,MAGMgC,mBAAS,IAHf,mBAGzBC,EAHyB,KAGZC,EAHY,OAIWF,mBAAS,IAJpB,mBAIzBG,EAJyB,KAIVC,EAJU,OAKSJ,oBAAS,GALlB,mBAKzBK,EALyB,KAKXC,EALW,KAO5BC,EAAUC,cAERC,EAAcC,iBAAO,MAErBC,EAAUjC,EAAMA,MAWhBkC,EAAO,IAAIC,IAAKF,EATN,CACZG,YAAY,EACZC,UAAW,GACXC,SAAU,EACVC,SAAU,IACVC,mBAAoB,EACpBC,KAAM,CAAC,UAOXC,SAASC,iBAAiB,YAAY,SAACC,GACX,GAAtBrB,EAAYT,QACZiB,EAAYc,QAAQC,WAK1B,IAmBMC,EAAgB,SAAA1C,GAClBmB,EAAe,IACfE,EAAiB,IACjBG,EAAQd,KAAK,SAAWV,EAAKC,KAC7ByB,EAAYc,QAAQG,QAGlBC,EAAY,SAACL,EAAGM,GACpBN,EAAEO,iBAEED,EAEAnB,EAAYc,QAAQC,SAGtBtB,EAAe,IACfE,EAAiB,IACjBK,EAAYc,QAAQG,SAgBxB,OACI,gCACE,yBAAKtD,UAAU,WAEb,yBAAKA,UAAU,SAAf,0BAIA,yBAAKA,UAAU,gBAEX,yBAAKA,UAAU,aACTiC,GAAgBJ,EAAYT,OAAO,IAAM,uBAAGsC,KAAK,GAAG1D,UAAU,YAAY2D,QAAU,SAACT,GAAD,OAAOK,EAAUL,GAAG,KAAQ,yBAAKU,IAAMC,QAC5H5B,GAAgBJ,EAAYT,OAAO,IAAM,uBAAGsC,KAAK,GAAG1D,UAAU,WAAW2D,QAAU,SAACT,GAAD,OAAOK,EAAUL,GAAG,KAAS,yBAAKU,IAAME,QAGhI,0BAAMC,SA3DD,SAAAb,GACbA,EAAEO,iBACE1B,EAAcX,OAAS,EACzBiC,EAAetB,EAAc,GAAGP,OAEhCM,EAAe,IACjBO,EAAYc,QAAQG,UAuDR,2BAAOU,KAAK,SAASC,MAAOpC,EAAaqC,SArElC,SAAAhB,GAEnBpD,QAAQC,IAAK,eAAgBmD,EAAEiB,OAAOF,OAEtCnC,EAAeoB,EAAEiB,OAAOF,OACxBjC,EAAkBQ,EAAK4B,OAAOlB,EAAEiB,OAAOF,OAAOI,QAAQ,SAAAvD,GAAC,MAAkB,IAAfA,EAAEU,KAAKrB,UAgEcmE,QA5BnE,SAAApB,GACdhB,GAAgB,IA2BmFqC,OAxBtF,SAAArB,GACbhB,GAAgB,GACY,GAAxBH,EAAcX,QAChBU,EAAe,KAqBkG0C,IAAKnC,EAAaoC,UAAU,SAOvI1C,GAAiBA,EAAcX,OAAS,GACtC,yBAAKpB,UAAU,iBAEX+B,EAAcR,KAAK,SAAAmD,GACjB,OAAO,yBAAK1E,UAAU,aAAayB,IAAKiD,EAAOlD,KAAKZ,KAChD,uBAAG+C,QAAU,kBAAMN,EAAcqB,EAAOlD,QAAUkD,EAAOlD,KAAKrB,cC1CzEwE,EA3EQ,SAAC/E,GACpB,IAAMgF,EAJD,IAAIC,gBAAgBC,cAAcV,QAKjCjC,EAAcC,cAEd2C,EAAcnF,EAAMmF,SACpBC,EAAcpF,EAAMqF,QAEpBC,EAAUN,EAAMO,IAAI,WAAaP,EAAMO,IAAI,UAAUC,MAAM,KAPnC,EAQYxD,mBAAUsD,GAAWF,GARjC,mBAQvBK,EARuB,KAQRC,EARQ,KAkDxBC,EAAiB,SAAAlB,GACrB,OAAOgB,EAAcG,SAASnB,IAGhC,OACE,yBAAKrE,UAAU,WAEf,yBAAKA,UAAU,WACXgF,EAAWzD,KAAK,SAAC8C,EAAQrD,GACvB,MAAc,IAAVqD,GAEF,0BAAM5C,IAAM4C,GACV,uBAAGV,QAAU,SAAAT,GAAC,OAnDL,SAACA,EAAGmB,GAGrB,GAFAnB,EAAEO,iBAEEuB,EAAW5D,QAAUiE,EAAcjE,OACrCiE,EAAcI,OAAO,EAAEJ,EAAcjE,QACrCiE,EAAchE,KAAMgD,QAEf,GAA6B,GAAxBgB,EAAcjE,QAAeiE,EAAcG,SAASnB,SAGzD,GAAKgB,EAAcG,SAASnB,GAAU,CAC3C,IAAMqB,EAAkBL,EAAcM,QAAStB,GAC/CgB,EAAcI,OAAOC,EAAW,QAGhCL,EAAchE,KAAMgD,GActBlC,EAAQd,KAAK,CACXuE,SAAU,IACVxB,OAAQ,WAAaiB,EAAcQ,KAAK,OAG1CP,EAAkBD,GAClBN,EAAUM,GAgBgBS,CAAa5C,EAAGmB,IAAUrE,UAAYuF,EAAelB,GAAU,GAAK,YAAeA,QAM/G,yBAAKrE,UAAU,aACX,kBAAC,IAAD,CAAMC,GAAG,UAAT,YC9CK8F,EA9BQ,SAAAnG,GAEnB,IAAIoG,EAAc,GACZ1F,EAASV,EAAMU,MAErB,OAAO,yBAAKN,UAAU,YAElBM,EAAMiB,KAAK,SAAAC,GAEX,GAAiB,IAAbA,EAAKrB,KAAY,MAAO,GAC5B,IAAM8F,EAAgBzE,EAAKZ,IAAIsF,OAAO,IAAMF,EAE5CA,EAAcxE,EAAKZ,IAAIsF,OAAO,GAC9B,IAAMC,EAAW,GAWjB,OATIF,GACFE,EAAS9E,KACP,wBAAII,IAAMuE,GAAgBA,IAI9BG,EAAS9E,KACP,kBAAC,IAAD,CAAMpB,GAAK,SAAWuB,EAAKZ,IAAMa,IAAMD,EAAKnB,KAAOL,UAAYwB,EAAKtB,MAASsB,EAAKrB,OAE7EgG,OCfPC,EAAW,SAAC9F,EAAO2E,GACvB,OAAQA,EACJ3E,EAAM+D,QAAQ,SAAA1D,GAAI,OAAIsE,EAAQO,SAAS7E,EAAKT,SAC5CI,GAkCO+F,EA/BG,SAAAzG,GAEd,IAWmB0G,EAXf1B,EAXG,IAAIC,gBAAgBC,cAAcV,QAanC9D,EAAkBV,EAAMU,MACxBiG,EAAkB3B,EAAMO,IAAI,WAAaP,EAAMO,IAAI,UAAUC,MAAM,KACnEoB,EAAkBJ,EAAU9F,EAAOiG,GANlB,EAQmB3E,mBAAS4E,GAR5B,mBAQhBC,EARgB,KAQDC,EARC,KAiBjBC,EAAa,SAAA9F,GACjB,OAAOA,EAAIwD,QAAQ,SAACJ,EAAO2C,EAAOC,GAAf,OAAyBA,EAAMlB,QAAQ1B,KAAW2C,MAOvE,OAAO,6BACL,kBAAC,EAAD,CAAe7B,SALQ,SAAA+B,GACvBJ,EAAkBN,EAAS9F,EAAOwG,KAIW7B,SAb5BqB,EAagDhG,EAZ1DqG,EAAWL,EAAS/E,KAAK,SAAAC,GAAI,OAAIA,EAAKtB,YAa7C,kBAAC,EAAD,CAAeI,MAAQmG,MClCdM,MAVf,YAAoC,IAAbC,EAAY,EAAZA,SACbpB,EAAad,cAAbc,SAMR,OAJAqB,qBAAU,WACQ,YAAZrB,GAAwBsB,OAAOC,SAAS,EAAG,KAC9C,CAACvB,IAEGoB,G,iBCyGMI,G,YAlFH,WAEV,IATiBvG,EASXyF,GATWzF,EASWP,EAAMA,MAR3BO,EAAIwG,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE1G,IAAM2G,EAAE3G,IAAO,GAAK,MAQRyD,QAAQ,SAAA1D,GAAI,MAAiB,IAAbA,EAAKR,QAE9D,OACE,kBAAC,IAAD,KAGE,yBAAKH,UAAU,OAEb,kBAAC,EAAD,MAGA,yBAAKA,UAAU,eAEb,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAOwH,KAAK,UACV,6BACE,qCACA,4fAmBJ,kBAAC,IAAD,CAAOA,KAAK,aACR,kBAAC,EAAD,KACI,kBAACpH,EAAD,CAAiBE,MAAQgG,MAIjC,kBAAC,IAAD,CAAOmB,OAAK,EAACD,KAAK,KAChB,kBAAC,EAAD,CAAUlH,MAAQgG,KAGpB,kBAAC,IAAD,CAAOkB,KAAK,KACV,yBAAKxH,UAAU,cACb,oDACA,2BACE,yBAAK4D,IAAM8D,WAWvB,gCACE,uBAAGhE,KAAK,yBAAyBS,OAAO,QAAxC,wDAGF,kBAAC,IAAD,CAAOqD,KAAK,aACV,yBAAKxH,UAAU,cACb,kBAAC,EAAD,CAAeM,MAAQgG,UC3FbqB,QACW,cAA7BT,OAAOtE,SAASgF,UAEe,UAA7BV,OAAOtE,SAASgF,UAEhBV,OAAOtE,SAASgF,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAS/E,SAASgF,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL1I,QAAQ0I,MAAMA,EAAMC,c","file":"static/js/main.2386d063.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.de36bd40.svg\";","module.exports = __webpack_public_path__ + \"static/media/x.3c9e1c60.svg\";","module.exports = __webpack_public_path__ + \"static/media/404.a4762f0d.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/cross.470d543b.svg\";","import React, { useRef, useEffect, useState } from 'react';\nimport terms from '../inventory/terms.json';\nimport img_search from '../assets/search.svg'\nimport img_cross from '../assets/cross.svg'\nimport Fuse from 'fuse.js';\nimport {\n  Link,\n} from \"react-router-dom\";\n\n const CrumbComponent = (props) => {\n\n    const activeTerm    = props.activeTerm;\n\n    console.log(' activeTerm', activeTerm)\n\n    return (\n      <div className=\"menuBar\">\n        <div className=\"breadcrumbs\">\n          <span className=\"hideSmall\"><Link to=\"/\">all</Link> <span>></span> <Link to={\"/?active=\" + activeTerm.Type } >{ activeTerm.Type }</Link> <span>></span> { activeTerm.Term }</span>\n          <span className=\"hideLarge\">View all</span>\n        </div>\n        <div className=\"rightSide\">\n          <Link to=\"/about\">about</Link>\n        </div>\n    </div>\n    );\n}\n\nexport default CrumbComponent\n\n","import React from 'react';\nimport CrumbComponent from './crumbComponent.js';\n\nimport {\n    BrowserRouter as Router,\n    Link,\n    useParams\n  } from \"react-router-dom\";\n\n  function getItemBySlug(termArr, slug){\n    return termArr.find( term => term.url == slug );\n  }\n  \n  function getRandom(arr, x){\n    let newArr = [];\n    for (let i = 0; i < x; i++) {\n        const x =  arr[Math.floor(Math.random() * arr.length)];\n        newArr.push(x);\n    }\n    return newArr;\n  }\n\n  export default function SingleComponent(props) {\n    \n    const terms = props.terms;\n    let { id } = useParams();\n\n    const termObj = getItemBySlug(terms, id );\n\n    return (\n\n        <div>\n            <CrumbComponent activeTerm={ termObj }></CrumbComponent>\n\n            <div className=\"singleTerm\">\n                <div className=\"side\">\n                        <strong className=\"backBtn\"><Link to=\"/\">view all</Link></strong><br />\n                        <ul>\n                            <li className=\"related\">random other terms</li>\n                            { getRandom(terms, 3).map( item => {\n                                return( <li><Link to={ item.url }>{ item.Term }</Link></li> );\n                            }) }\n                        </ul>\n                        {/* {  terms.map( term => { */}\n                            {/* // return <a href=\"#\">{ term }</a> */}\n                        {/* })} */}\n                </div>\n                <div className=\"main\">\n            \n                    <div className=\"animated fadeIn\" key={ termObj.url } >\n                        <div className=\"mainTitle\">\n                            <h1>{ termObj.Term }</h1>\n                        </div>\n                        <i>{ termObj.Type } term</i>\n                        \n                        {/*<!-- Definition would be good for SEO --> */}\n                        <p>Definition: { termObj.Definition }</p> \n\n                        {/* <p>Synonyms</p> */}\n                        {/* <p>Acronyms</p> */}\n                        {/* <p>external links</p> */}\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    );\n  \n\n  \n\n\n\n}\n\n","import React, { useRef, useEffect, useState } from 'react';\nimport terms from '../inventory/terms.json';\nimport img_search from '../assets/search.svg'\nimport img_cross from '../assets/x.svg'\nimport Fuse from 'fuse.js';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  useHistory,\n  useRouteMatch,\n  Route,\n  Link,\n  useParams\n} from \"react-router-dom\";\n\n const HeaderComponent = (props) => {\n\n    // HOOKS\n    const [searchQuery, setSearchQuery] = useState('');\n    const [searchResults, setSearchResults ] = useState([]);\n    const [searchActive, setSearchActive ] = useState(false);\n\n    let history = useHistory();\n\n    const searchInput = useRef(null);\n\n    const termArr = terms.terms;\n\n    const options = {\n        shouldSort: true,\n        threshold: 0.2,\n        location: 0,\n        distance: 100,\n        minMatchCharLength: 5,\n        keys: ['Term']\n      };\n  \n    const fuse = new Fuse(termArr, options );\n\n    //---------------------------------------------//\n\n    document.addEventListener('keypress', (e) => {\n      if( searchQuery.length == 0 ){\n          searchInput.current.focus();\n      }\n\n    });\n\n    const onSearchChange = e => {\n        \n        console.log( 'searchChange', e.target.value );\n\n        setSearchQuery(e.target.value);\n        setSearchResults( fuse.search(e.target.value).filter( x=> x.item.Term != '') )\n    }\n\n    const onSubmit = e => {\n        e.preventDefault();\n        if( searchResults.length > 0 ){\n          onSearchClick( searchResults[0].item )\n        } else {\n          setSearchQuery('');\n        searchInput.current.blur();\n\n        }\n    }\n\n    const onSearchClick = term => {\n        setSearchQuery('');\n        setSearchResults([]);\n        history.push('/term/' + term.url );\n        searchInput.current.blur();\n    }\n\n    const setSearch = (e, val) => {\n      e.preventDefault();\n\n      if( val ){\n        // useEffect(() => {\n          searchInput.current.focus();\n        // }, []);\n      } else {\n        setSearchQuery('');\n        setSearchResults([]);\n        searchInput.current.blur();\n      }\n\n    }\n\n    const onFocus = e => {\n      setSearchActive(true)\n    }\n\n    const onBlur = e => {\n      setSearchActive(false);\n      if( searchResults.length == 0 ){\n        setSearchQuery('');\n      }\n    }\n\n    return (\n        <header>\n          <div className=\"wrapper\">\n            \n            <div className=\"title\">\n              FASHIONTECH DICTIONARY\n            </div>\n\n            <div className=\"searchHolder\">\n                \n                <div className=\"buttons\">\n                  { !(searchActive || searchQuery.length>0) && <a href=\"\" className=\"btnSearch\" onClick={ (e) => setSearch(e, true) }><img src={ img_search } /></a> }\n                  { (searchActive || searchQuery.length>0) && <a href=\"\" className=\"btnClose\" onClick={ (e) => setSearch(e, false) }><img src={ img_cross } /></a> }\n                </div>\n\n                <form onSubmit={ onSubmit }> \n                  \n                    <input type=\"search\" value={searchQuery} onChange={onSearchChange} onFocus={onFocus} onBlur={onBlur} ref={searchInput} maxLength=\"40\" />\n                </form>\n\n                \n\n            </div>\n\n            { searchResults && searchResults.length > 0 && \n                <div className=\"searchResults\">  \n                  { \n                    searchResults.map( result => {\n                      return(<div className=\"searchItem\" key={result.item.url}>\n                          <a onClick={ () => onSearchClick(result.item) }>{ result.item.Term }</a>\n                      </div>)\n                    })\n                  }\n                </div>\n              }\n\n          </div>\n        </header>\n\n    );\n}\n\nexport default HeaderComponent\n\n","import React, { useRef, useEffect, useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Link,\n  useLocation,\n  useHistory\n} from \"react-router-dom\";\n\nconst useQuery = () => {\n  return new URLSearchParams(useLocation().search);\n}\n\n const MenuComponent = (props) => {\n    let   query       = useQuery();\n    const history     = useHistory();\n\n    const callBack    = props.callBack;\n    const allFilters  = props.filters;\n\n    const filtery = query.get('active') && query.get('active').split(',');\n    const [activeFilters, setActiveFilters] = useState( filtery || allFilters );\n    let _activeFilters = [];\n\n    const toggleFilter = (e, filter) => {\n        e.preventDefault();\n\n        if( allFilters.length <= activeFilters.length){\n          activeFilters.splice(0,activeFilters.length);\n          activeFilters.push( filter );\n\n        } else if ( activeFilters.length == 1 && activeFilters.includes(filter) ) {\n\n\n        } else if ( activeFilters.includes(filter) ) {\n          const filterPos       = activeFilters.indexOf( filter );\n          activeFilters.splice(filterPos, 1);\n          \n        } else {\n          activeFilters.push( filter );\n        }\n\n        // if less then toggle.\n\n\n        // const filterPos       = activeFilters.indexOf( filter );\n        \n        // if( filterPos >= 0 ){\n        //   activeFilters.splice(filterPos, 1)\n        // } else {\n        //   activeFilters.push( filter );\n        // }\n\n        history.push({\n          pathname: '/',\n          search: '?active=' + activeFilters.join(',')\n        })\n        \n        setActiveFilters( activeFilters );\n        callBack( activeFilters );\n   \n    }\n\n    const isActiveFilter = filter => {\n      return activeFilters.includes(filter)\n    }\n\n    return (\n      <div className=\"menuBar\">\n\n      <div className=\"filters\">\n        { allFilters.map( (filter, i) => {\n            if( filter == '' ) return false;\n            return (\n              <span key={ filter }>\n                <a onClick={ e => toggleFilter(e, filter) } className={ isActiveFilter(filter) ? '' : 'disabled' }>{ filter }</a>\n              </span>\n            )\n          })\n        }\n      </div>\n      <div className=\"rightSide\">\n          <Link to=\"/about\">about</Link>\n        </div>\n    </div>\n    );\n}\n\nexport default MenuComponent\n\n","import React, { useRef, useEffect, useState } from 'react';\nimport {\n  Link,\n} from \"react-router-dom\";\n\n const ListComponent = props => {\n\n    let newCategory = '';\n    const terms  = props.terms;\n\n    return <div className=\"termList\">\n\n      { terms.map( item => {\n        \n        if (item.Term == '') return '';\n        const isNewCategory = item.url.charAt(0) != newCategory;\n\n        newCategory = item.url.charAt(0);\n        const elements = [];\n\n        if( isNewCategory ){\n          elements.push( \n            <h1 key={ newCategory }>{ newCategory }</h1>\n          );\n        }\n\n        elements.push(\n          <Link to={ \"/term/\" + item.url } key={ item.slug } className={ item.Type }>{ item.Term }</Link>\n        )\n        return elements;\n      })\n      } \n    </div>\n}\n\nexport default ListComponent\n\n","import React, { useRef, useEffect, useState } from 'react';\nimport MenuComponent from './menuComponent.js';\nimport ListComponent from './listComponent.js';\nimport {\n  BrowserRouter as Router,\n  Link,\n  useLocation,\n  useHistory\n} from \"react-router-dom\";\n\n  const useQuery = () => {\n    return new URLSearchParams(useLocation().search);\n  }\n\n  const filterBy = (terms, filters) => {\n    return (filters)\n      ? terms.filter( term => filters.includes(term.Type) )\n      : terms\n  }\n\n const ListPage = props => {\n\n    let query = useQuery();\n\n    const terms           = props.terms;\n    const queryFilters    = query.get('active') && query.get('active').split(',');\n    const _filteredTerms  = filterBy( terms, queryFilters );\n\n    const [filteredTerms, setFilteredTerms] = useState(_filteredTerms);\n\n\n\n\n    const getTypes = ( allTerms ) => {\n      return onlyUnique(allTerms.map( item => item.Type ));\n    }\n\n    const onlyUnique = arr => { \n      return arr.filter( (value, index, array) => array.indexOf(value) === index); \n    }\n\n    const onFilterCallback = updatedFilters => {\n      setFilteredTerms( filterBy(terms, updatedFilters) );\n    }\n  \n    return <div>\n      <MenuComponent callBack={ onFilterCallback } filters={ getTypes( terms ) }></MenuComponent>\n      <ListComponent terms={ filteredTerms }></ListComponent>\n    </div>\n}\n\nexport default ListPage\n\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n \nfunction ScrollToTop({ children }) {\n  const { pathname } = useLocation();\n \n  useEffect(() => {\n    if (pathname != \"/contact\") window.scrollTo(0, 0);\n  }, [pathname]);\n \n  return children;\n}\n \nexport default ScrollToTop;","import React, { useRef, useEffect, useState } from 'react';\n\nimport Fuse from 'fuse.js';\n\nimport {groupBy} from 'lodash';\nimport logo from './logo.svg';\nimport terms from './inventory/terms.json';\nimport SingleComponent from './components/singleComponent.js';\nimport HeaderComponent from './components/headerComponent.js';\nimport ListPage from './components/listPage.js';\nimport ListComponent from './components/listComponent.js';\nimport ScrollToTop from './components/ScrollToTop.js';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  useHistory,\n  useRouteMatch,\n  Route,\n  Link,\n  useParams\n} from \"react-router-dom\";\n\nimport img_404 from './assets/404.gif'\nimport './animate.css';\nimport './App.css';\n\nconst sortBySlug = arr => {\n  return arr.sort((a, b) => (a.url > b.url) ? 1 : -1)\n}\n\n\n\n// https://stackoverflow.com/questions/43822589/react-router-v4-browserhistory-is-undefined\nconst App = () => {\n\n  const allTerms = sortBySlug(terms.terms).filter( term => term.Term != '' );\n  \n  return (\n    <Router>\n     \n\n      <div className=\"App\">\n\n        <HeaderComponent></HeaderComponent>\n     \n      \n        <div className=\"mainSection\">\n\n          <Switch>\n\n            <Route path=\"/about\">\n              <div>\n                <h1>Speak</h1>\n                <p>speak eachothers language, this dictionary is made\n\n\n                  FashionTech is a place where two diametrical worlds come together.\n\n                  Where innovation of tech and the creativity of fashion come together.\n\n                  Brought to you by the people from HATCH - where the Digital Showroom has its home.\n\n                  ___\n\n                  Do you have any questions or remarks, feel free to reach out to fashiontech-dictionary@hatchstudio.co.\n\n                  meant for fashion people we need to understand tech, and techies that want to understand fashion.\n\n                </p>\n              </div>\n            </Route>\n\n            <Route path=\"/term/:id\">\n                <ScrollToTop>\n                    <SingleComponent terms={ allTerms } />\n                </ScrollToTop>\n            </Route>\n              \n            <Route exact path=\"/\">\n              <ListPage terms={ allTerms }></ListPage>\n            </Route>            \n\n            <Route path=\"*\">\n              <div className=\"singleTerm\">\n                <h1>404 - Page not found</h1>\n                <p>\n                  <img src={ img_404 } />\n                </p>\n              </div>\n            </Route>\n\n          </Switch>\n\n      </div>\n      \n\n\n      <footer>\n        <a href=\"https://hatchstudio.co\" target=\"_new\">Brought to you by the team at HATCH. Come join us! </a>\n      </footer>\n\n      <Route path=\"/term/:id\">\n        <div className=\"footerList\">\n          <ListComponent terms={ allTerms }></ListComponent>\n        </div>\n      </Route>\n\n      </div>\n\n\n    </Router>\n  )\n\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}