{"ast":null,"code":"var _jsxFileName = \"/Users/andre/Repositories/fashion-tech-dictionary/src/components/listPage.js\";\nimport React, { useRef, useEffect, useState } from 'react';\nimport MenuComponent from './menuComponent.js';\nimport ListComponent from './listComponent.js';\nimport { BrowserRouter as Router, Link, useLocation, useHistory } from \"react-router-dom\";\n\nconst useQuery = () => {\n  return new URLSearchParams(useLocation().search);\n};\n\nconst filterBy = (terms, filters) => {\n  return filters ? terms.filter(term => filters.includes(term.Type)) : terms;\n};\n\nconst ListPage = props => {\n  let query = useQuery();\n  const terms = props.terms;\n  const queryFilters = query.get('active') && query.get('active').split(',');\n\n  const _filteredTerms = filterBy(terms, queryFilters);\n\n  const [filteredTerms, setFilteredTerms] = useState(_filteredTerms);\n\n  const getTypes = allTerms => {\n    return onlyUnique(allTerms.map(item => item.Type));\n  };\n\n  const onlyUnique = arr => {\n    return arr.filter((value, index, array) => array.indexOf(value) === index);\n  };\n\n  const onFilterCallback = updatedFilters => {\n    setFilteredTerms(filterBy(terms, updatedFilters));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(MenuComponent, {\n    callBack: onFilterCallback,\n    filters: getTypes(terms),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(ListComponent, {\n    terms: filteredTerms,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }));\n};\n\nexport default ListPage;","map":{"version":3,"sources":["/Users/andre/Repositories/fashion-tech-dictionary/src/components/listPage.js"],"names":["React","useRef","useEffect","useState","MenuComponent","ListComponent","BrowserRouter","Router","Link","useLocation","useHistory","useQuery","URLSearchParams","search","filterBy","terms","filters","filter","term","includes","Type","ListPage","props","query","queryFilters","get","split","_filteredTerms","filteredTerms","setFilteredTerms","getTypes","allTerms","onlyUnique","map","item","arr","value","index","array","indexOf","onFilterCallback","updatedFilters"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,IAFF,EAGEC,WAHF,EAIEC,UAJF,QAKO,kBALP;;AAOE,MAAMC,QAAQ,GAAG,MAAM;AACrB,SAAO,IAAIC,eAAJ,CAAoBH,WAAW,GAAGI,MAAlC,CAAP;AACD,CAFD;;AAIA,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACnC,SAAQA,OAAD,GACHD,KAAK,CAACE,MAAN,CAAcC,IAAI,IAAIF,OAAO,CAACG,QAAR,CAAiBD,IAAI,CAACE,IAAtB,CAAtB,CADG,GAEHL,KAFJ;AAGD,CAJD;;AAMD,MAAMM,QAAQ,GAAGC,KAAK,IAAI;AAEvB,MAAIC,KAAK,GAAGZ,QAAQ,EAApB;AAEA,QAAMI,KAAK,GAAaO,KAAK,CAACP,KAA9B;AACA,QAAMS,YAAY,GAAMD,KAAK,CAACE,GAAN,CAAU,QAAV,KAAuBF,KAAK,CAACE,GAAN,CAAU,QAAV,EAAoBC,KAApB,CAA0B,GAA1B,CAA/C;;AACA,QAAMC,cAAc,GAAIb,QAAQ,CAAEC,KAAF,EAASS,YAAT,CAAhC;;AAEA,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoC1B,QAAQ,CAACwB,cAAD,CAAlD;;AAKA,QAAMG,QAAQ,GAAKC,QAAF,IAAgB;AAC/B,WAAOC,UAAU,CAACD,QAAQ,CAACE,GAAT,CAAcC,IAAI,IAAIA,IAAI,CAACd,IAA3B,CAAD,CAAjB;AACD,GAFD;;AAIA,QAAMY,UAAU,GAAGG,GAAG,IAAI;AACxB,WAAOA,GAAG,CAAClB,MAAJ,CAAY,CAACmB,KAAD,EAAQC,KAAR,EAAeC,KAAf,KAAyBA,KAAK,CAACC,OAAN,CAAcH,KAAd,MAAyBC,KAA9D,CAAP;AACD,GAFD;;AAIA,QAAMG,gBAAgB,GAAGC,cAAc,IAAI;AACzCZ,IAAAA,gBAAgB,CAAEf,QAAQ,CAACC,KAAD,EAAQ0B,cAAR,CAAV,CAAhB;AACD,GAFD;;AAIA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAGD,gBAA1B;AAA6C,IAAA,OAAO,EAAGV,QAAQ,CAAEf,KAAF,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,EAEL,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAGa,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFK,CAAP;AAIH,CA7BA;;AA+BD,eAAeP,QAAf","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport MenuComponent from './menuComponent.js';\nimport ListComponent from './listComponent.js';\nimport {\n  BrowserRouter as Router,\n  Link,\n  useLocation,\n  useHistory\n} from \"react-router-dom\";\n\n  const useQuery = () => {\n    return new URLSearchParams(useLocation().search);\n  }\n\n  const filterBy = (terms, filters) => {\n    return (filters)\n      ? terms.filter( term => filters.includes(term.Type) )\n      : terms\n  }\n\n const ListPage = props => {\n\n    let query = useQuery();\n\n    const terms           = props.terms;\n    const queryFilters    = query.get('active') && query.get('active').split(',');\n    const _filteredTerms  = filterBy( terms, queryFilters );\n\n    const [filteredTerms, setFilteredTerms] = useState(_filteredTerms);\n\n\n\n\n    const getTypes = ( allTerms ) => {\n      return onlyUnique(allTerms.map( item => item.Type ));\n    }\n\n    const onlyUnique = arr => { \n      return arr.filter( (value, index, array) => array.indexOf(value) === index); \n    }\n\n    const onFilterCallback = updatedFilters => {\n      setFilteredTerms( filterBy(terms, updatedFilters) );\n    }\n  \n    return <div>\n      <MenuComponent callBack={ onFilterCallback } filters={ getTypes( terms ) }></MenuComponent>\n      <ListComponent terms={ filteredTerms }></ListComponent>\n    </div>\n}\n\nexport default ListPage\n\n"]},"metadata":{},"sourceType":"module"}