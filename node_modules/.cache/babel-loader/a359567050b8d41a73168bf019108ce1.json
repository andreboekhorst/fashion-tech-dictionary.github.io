{"ast":null,"code":"import _slicedToArray from\"/Users/andre/Repositories/fashion-tech-dictionary/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useEffect,useState}from'react';import MenuComponent from'./menuComponent.js';import ListComponent from'./listComponent.js';import{BrowserRouter as Router,Link,useLocation,useHistory}from\"react-router-dom\";var useQuery=function useQuery(){return new URLSearchParams(useLocation().search);};var filterBy=function filterBy(terms,filters){return filters?terms.filter(function(term){return filters.includes(term.Type);}):terms;};var ListPage=function ListPage(props){var query=useQuery();var terms=props.terms;var queryFilters=query.get('active')&&query.get('active').split(',');var _filteredTerms=filterBy(terms,queryFilters);var _useState=useState(_filteredTerms),_useState2=_slicedToArray(_useState,2),filteredTerms=_useState2[0],setFilteredTerms=_useState2[1];var getTypes=function getTypes(allTerms){return onlyUnique(allTerms.map(function(item){return item.Type;}));};var onlyUnique=function onlyUnique(arr){return arr.filter(function(value,index,array){return array.indexOf(value)===index;});};var onFilterCallback=function onFilterCallback(updatedFilters){setFilteredTerms(filterBy(terms,updatedFilters));};return React.createElement(\"div\",null,React.createElement(MenuComponent,{callBack:onFilterCallback,filters:getTypes(terms)}),React.createElement(ListComponent,{terms:filteredTerms}));};export default ListPage;","map":{"version":3,"sources":["/Users/andre/Repositories/fashion-tech-dictionary/src/components/listPage.js"],"names":["React","useRef","useEffect","useState","MenuComponent","ListComponent","BrowserRouter","Router","Link","useLocation","useHistory","useQuery","URLSearchParams","search","filterBy","terms","filters","filter","term","includes","Type","ListPage","props","query","queryFilters","get","split","_filteredTerms","filteredTerms","setFilteredTerms","getTypes","allTerms","onlyUnique","map","item","arr","value","index","array","indexOf","onFilterCallback","updatedFilters"],"mappings":"wKAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,SAAxB,CAAmCC,QAAnC,KAAmD,OAAnD,CACA,MAAOC,CAAAA,aAAP,KAA0B,oBAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,oBAA1B,CACA,OACEC,aAAa,GAAIC,CAAAA,MADnB,CAEEC,IAFF,CAGEC,WAHF,CAIEC,UAJF,KAKO,kBALP,CAOE,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,MAAO,IAAIC,CAAAA,eAAJ,CAAoBH,WAAW,GAAGI,MAAlC,CAAP,CACD,CAFD,CAIA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAQC,OAAR,CAAoB,CACnC,MAAQA,CAAAA,OAAD,CACHD,KAAK,CAACE,MAAN,CAAc,SAAAC,IAAI,QAAIF,CAAAA,OAAO,CAACG,QAAR,CAAiBD,IAAI,CAACE,IAAtB,CAAJ,EAAlB,CADG,CAEHL,KAFJ,CAGD,CAJD,CAMD,GAAMM,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,KAAK,CAAI,CAEvB,GAAIC,CAAAA,KAAK,CAAGZ,QAAQ,EAApB,CAEA,GAAMI,CAAAA,KAAK,CAAaO,KAAK,CAACP,KAA9B,CACA,GAAMS,CAAAA,YAAY,CAAMD,KAAK,CAACE,GAAN,CAAU,QAAV,GAAuBF,KAAK,CAACE,GAAN,CAAU,QAAV,EAAoBC,KAApB,CAA0B,GAA1B,CAA/C,CACA,GAAMC,CAAAA,cAAc,CAAIb,QAAQ,CAAEC,KAAF,CAASS,YAAT,CAAhC,CANuB,cAQmBrB,QAAQ,CAACwB,cAAD,CAR3B,wCAQhBC,aARgB,eAQDC,gBARC,eAavB,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAEC,QAAF,CAAgB,CAC/B,MAAOC,CAAAA,UAAU,CAACD,QAAQ,CAACE,GAAT,CAAc,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACd,IAAT,EAAlB,CAAD,CAAjB,CACD,CAFD,CAIA,GAAMY,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAG,GAAG,CAAI,CACxB,MAAOA,CAAAA,GAAG,CAAClB,MAAJ,CAAY,SAACmB,KAAD,CAAQC,KAAR,CAAeC,KAAf,QAAyBA,CAAAA,KAAK,CAACC,OAAN,CAAcH,KAAd,IAAyBC,KAAlD,EAAZ,CAAP,CACD,CAFD,CAIA,GAAMG,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAAC,cAAc,CAAI,CACzCZ,gBAAgB,CAAEf,QAAQ,CAACC,KAAD,CAAQ0B,cAAR,CAAV,CAAhB,CACD,CAFD,CAIA,MAAO,gCACL,oBAAC,aAAD,EAAe,QAAQ,CAAGD,gBAA1B,CAA6C,OAAO,CAAGV,QAAQ,CAAEf,KAAF,CAA/D,EADK,CAEL,oBAAC,aAAD,EAAe,KAAK,CAAGa,aAAvB,EAFK,CAAP,CAIH,CA7BA,CA+BD,cAAeP,CAAAA,QAAf","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport MenuComponent from './menuComponent.js';\nimport ListComponent from './listComponent.js';\nimport {\n  BrowserRouter as Router,\n  Link,\n  useLocation,\n  useHistory\n} from \"react-router-dom\";\n\n  const useQuery = () => {\n    return new URLSearchParams(useLocation().search);\n  }\n\n  const filterBy = (terms, filters) => {\n    return (filters)\n      ? terms.filter( term => filters.includes(term.Type) )\n      : terms\n  }\n\n const ListPage = props => {\n\n    let query = useQuery();\n\n    const terms           = props.terms;\n    const queryFilters    = query.get('active') && query.get('active').split(',');\n    const _filteredTerms  = filterBy( terms, queryFilters );\n\n    const [filteredTerms, setFilteredTerms] = useState(_filteredTerms);\n\n\n\n\n    const getTypes = ( allTerms ) => {\n      return onlyUnique(allTerms.map( item => item.Type ));\n    }\n\n    const onlyUnique = arr => { \n      return arr.filter( (value, index, array) => array.indexOf(value) === index); \n    }\n\n    const onFilterCallback = updatedFilters => {\n      setFilteredTerms( filterBy(terms, updatedFilters) );\n    }\n  \n    return <div>\n      <MenuComponent callBack={ onFilterCallback } filters={ getTypes( terms ) }></MenuComponent>\n      <ListComponent terms={ filteredTerms }></ListComponent>\n    </div>\n}\n\nexport default ListPage\n\n"]},"metadata":{},"sourceType":"module"}