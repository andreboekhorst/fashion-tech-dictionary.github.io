{"ast":null,"code":"var _jsxFileName = \"/Users/andre/Repositories/fashion-tech-dictionary/src/components/singleComponent.js\";\nimport React from 'react';\nimport CrumbComponent from './crumbComponent.js';\nimport { BrowserRouter as Router, Link, useParams } from \"react-router-dom\";\n\nfunction getItemBySlug(termArr, slug) {\n  return termArr.find(term => term.url == slug);\n}\n\nfunction getRandom(arr, x) {\n  let newArr = [];\n\n  for (let i = 0; i < x; i++) {\n    const x = arr[Math.floor(Math.random() * arr.length)];\n    newArr.push(x);\n  }\n\n  return newArr;\n}\n\nexport default function SingleComponent(props) {\n  const terms = props.terms;\n  let {\n    id\n  } = useParams();\n  const termObj = getItemBySlug(terms, id);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(CrumbComponent, {\n    activeTerm: termObj,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"singleTerm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"side\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    className: \"backBtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"view all\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"related\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"random other terms\"), getRandom(terms, 3).map(item => {\n    return React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: item.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, item.Term));\n  }))), React.createElement(\"div\", {\n    className: \"main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"animated fadeIn\",\n    key: termObj.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mainTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, termObj.Term)), React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, termObj.Type, \" term\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Definition: \", termObj.Definition)))));\n}","map":{"version":3,"sources":["/Users/andre/Repositories/fashion-tech-dictionary/src/components/singleComponent.js"],"names":["React","CrumbComponent","BrowserRouter","Router","Link","useParams","getItemBySlug","termArr","slug","find","term","url","getRandom","arr","x","newArr","i","Math","floor","random","length","push","SingleComponent","props","terms","id","termObj","map","item","Term","Type","Definition"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AAEA,SACIC,aAAa,IAAIC,MADrB,EAEIC,IAFJ,EAGIC,SAHJ,QAIS,kBAJT;;AAME,SAASC,aAAT,CAAuBC,OAAvB,EAAgCC,IAAhC,EAAqC;AACnC,SAAOD,OAAO,CAACE,IAAR,CAAcC,IAAI,IAAIA,IAAI,CAACC,GAAL,IAAYH,IAAlC,CAAP;AACD;;AAED,SAASI,SAAT,CAAmBC,GAAnB,EAAwBC,CAAxB,EAA0B;AACxB,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAApB,EAAuBE,CAAC,EAAxB,EAA4B;AACxB,UAAMF,CAAC,GAAID,GAAG,CAACI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,GAAG,CAACO,MAA/B,CAAD,CAAd;AACAL,IAAAA,MAAM,CAACM,IAAP,CAAYP,CAAZ;AACH;;AACD,SAAOC,MAAP;AACD;;AAED,eAAe,SAASO,eAAT,CAAyBC,KAAzB,EAAgC;AAE7C,QAAMC,KAAK,GAAGD,KAAK,CAACC,KAApB;AACA,MAAI;AAAEC,IAAAA;AAAF,MAASpB,SAAS,EAAtB;AAEA,QAAMqB,OAAO,GAAGpB,aAAa,CAACkB,KAAD,EAAQC,EAAR,CAA7B;AAEA,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AAAgB,IAAA,UAAU,EAAGC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4B,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA5B,CADR,EACyE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADzE,EAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEMd,SAAS,CAACY,KAAD,EAAQ,CAAR,CAAT,CAAoBG,GAApB,CAAyBC,IAAI,IAAI;AAC/B,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAGA,IAAI,CAACjB,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBiB,IAAI,CAACC,IAA7B,CAAJ,CAAR;AACH,GAFC,CAFN,CAFR,CADJ,EAaI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,GAAG,EAAGH,OAAO,CAACf,GAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMe,OAAO,CAACG,IAAd,CADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,OAAO,CAACI,IAAb,UAJJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAiBJ,OAAO,CAACK,UAAzB,CAPJ,CAFJ,CAbJ,CAHJ,CAFJ;AA4CH","sourcesContent":["import React from 'react';\nimport CrumbComponent from './crumbComponent.js';\n\nimport {\n    BrowserRouter as Router,\n    Link,\n    useParams\n  } from \"react-router-dom\";\n\n  function getItemBySlug(termArr, slug){\n    return termArr.find( term => term.url == slug );\n  }\n  \n  function getRandom(arr, x){\n    let newArr = [];\n    for (let i = 0; i < x; i++) {\n        const x =  arr[Math.floor(Math.random() * arr.length)];\n        newArr.push(x);\n    }\n    return newArr;\n  }\n\n  export default function SingleComponent(props) {\n    \n    const terms = props.terms;\n    let { id } = useParams();\n\n    const termObj = getItemBySlug(terms, id );\n\n    return (\n\n        <div>\n            <CrumbComponent activeTerm={ termObj }></CrumbComponent>\n\n            <div className=\"singleTerm\">\n                <div className=\"side\">\n                        <strong className=\"backBtn\"><Link to=\"/\">view all</Link></strong><br />\n                        <ul>\n                            <li className=\"related\">random other terms</li>\n                            { getRandom(terms, 3).map( item => {\n                                return( <li><Link to={ item.url }>{ item.Term }</Link></li> );\n                            }) }\n                        </ul>\n                        {/* {  terms.map( term => { */}\n                            {/* // return <a href=\"#\">{ term }</a> */}\n                        {/* })} */}\n                </div>\n                <div className=\"main\">\n            \n                    <div className=\"animated fadeIn\" key={ termObj.url } >\n                        <div className=\"mainTitle\">\n                            <h1>{ termObj.Term }</h1>\n                        </div>\n                        <i>{ termObj.Type } term</i>\n                        \n                        {/*<!-- Definition would be good for SEO --> */}\n                        <p>Definition: { termObj.Definition }</p> \n\n                        {/* <p>Synonyms</p> */}\n                        {/* <p>Acronyms</p> */}\n                        {/* <p>external links</p> */}\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    );\n  \n\n  \n\n\n\n}\n\n"]},"metadata":{},"sourceType":"module"}